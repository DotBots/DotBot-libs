name: CI 

on:
  push:
    branches:
      - main
    tags: '*'

  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: ["dotbot-v2", "dotbot-v3", "nrf52833dk", "nrf52840dk", "nrf5340dk-app", "nrf5340dk-net"]
        config: ["Debug", "Release"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Build projects
        run: BUILD_TARGET=${{ matrix.target }} BUILD_CONFIG=${{ matrix.config }} make docker

  build-success:
    # this is only run if all builds succeeded
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: build succeeded
      run: exit 0

  style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Check style
        run: make check-format

  doc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install Doxygen
        run: sudo apt-get install -y doxygen graphviz
      - name: Install Sphinx
        run: python -m pip install -r doc/sphinx/requirements.txt
      - name: Build documentation
        run: make doc

  # Disable Docker build for now because SEGGER requires authentication
  # to download SEGGER Embedded Studio
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4
  #     - name: Build docker image
  #       run: docker build -t dotbot .

  release:
    runs-on: ubuntu-latest
    # needs: [docker, doc, style, build-success]
    needs: [doc, style, build-success]
    if: >-
      github.event_name == 'push' &&
      startsWith(github.event.ref, 'refs/tags')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          token: ${{ secrets.RELEASE_TOKEN }}
